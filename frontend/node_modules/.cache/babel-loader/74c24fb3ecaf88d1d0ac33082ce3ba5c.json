{"ast":null,"code":"var _jsxFileName = \"/Users/codyraymond/Desktop/code_files/web_dev_projects/new_app/mycro-brewery/frontend/src/calculate.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculate extends React.Component {\n  constructor(props) {\n    super(props); // this.iV = document.getElementById('initial-volume');\n    // this.fG = document.getElementById('final-gravity');\n    // this.iP = document.getElementById('initial-input');\n    // this.fP = document.getElementById('final-input');\n\n    this.state = {\n      initialValue: '',\n      finalValue: '',\n      potential: '',\n      final: ''\n    };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  calculator(iG, fG) {\n    let finalGravity = (iG - fG) * 131.25;\n    let potentialVolume = {\n      '1.000': 0.0,\n      '1.005': 0.0,\n      '1.010': 0.9,\n      '1.015': 1.6,\n      '1.020': 2.3,\n      '1.025': 3.0,\n      '1.030': 3.5,\n      '1.035': 4.0,\n      '1.040': 4.9,\n      '1.045': 5.3,\n      '1.050': 6.1,\n      '1.055': 6.9,\n      '1.060': 7.5,\n      '1.065': 8.1,\n      '1.070': 8.9,\n      '1.075': 9.4,\n      '1.080': 10.2,\n      '1.085': 10.9,\n      '1.090': 11.5,\n      '1.095': 12.2,\n      '1.100': 13.0,\n      '1.105': 13.7,\n      '1.110': 14.2,\n      '1.115': 15.0,\n      '1.120': 15.7,\n      '1.125': 16.2,\n      '1.130': 17.1,\n      '1.135': 17.8,\n      '1.140': 18.4,\n      '1.145': 19.0,\n      '1.150': 19.9\n    };\n    return [potentialVolume[iG], finalGravity];\n  }\n\n  handleSubmit(event) {\n    let initial = this.state.initialValue;\n    let final = this.state.finalValue;\n    let measurements = this.calculator(initial, final);\n    this.setState({\n      initialValue: this.state.initialValue,\n      finalValue: this.state.finalValue,\n      potential: measurements[0],\n      final: measurements[1]\n    });\n    event.preventDefault();\n  }\n\n  handleChange1(event) {\n    this.setState({\n      initialValue: event.target.value,\n      finalValue: this.state.finalValue,\n      initial: this.state.initial,\n      final: this.state.final\n    });\n  }\n\n  handleChange2(event) {\n    this.setState({\n      initialValue: this.state.initialValue,\n      finalValue: event.target.value,\n      initial: this.state.initial,\n      final: this.state.final\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"initial\",\n            children: \"Initial Gravity Measurement: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 83\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"initial\",\n            type: \"text\",\n            placeholder: \"in increments of 0.005\",\n            value: this.state.initialValue,\n            onChange: this.handleChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 165\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"final\",\n            children: \"Final Gravity Measurement: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 79\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"final\",\n            type: \"text\",\n            value: this.state.finalValue,\n            onChange: this.handleChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 125\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"calculate-button\",\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: this.clickHandler,\n          children: \"Calculate!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"initial-volume\",\n        children: \"Potential Gravity (before fermentation): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.potential\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"final-gravity\",\n        children: \"Final Gravity (after fermentation): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.final\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Calculate;","map":{"version":3,"sources":["/Users/codyraymond/Desktop/code_files/web_dev_projects/new_app/mycro-brewery/frontend/src/calculate.js"],"names":["React","ReactDOM","Calculate","Component","constructor","props","state","initialValue","finalValue","potential","final","handleChange1","bind","handleChange2","handleSubmit","calculator","iG","fG","finalGravity","potentialVolume","event","initial","measurements","setState","preventDefault","target","value","render","clickHandler"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\nclass Calculate extends React.Component {\n    constructor(props){\n        super(props);\n        // this.iV = document.getElementById('initial-volume');\n        // this.fG = document.getElementById('final-gravity');\n        // this.iP = document.getElementById('initial-input');\n        // this.fP = document.getElementById('final-input');\n\n        this.state = {\n            initialValue: '',\n            finalValue: '',\n            potential: '',\n            final: ''\n        }\n        this.handleChange1 = this.handleChange1.bind(this);\n        this.handleChange2 = this.handleChange2.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    calculator(iG,fG){\n        let finalGravity = (iG - fG) * 131.25;\n        let potentialVolume = {\n            '1.000': 0.0,\n            '1.005': 0.0,\n            '1.010': 0.9,\n            '1.015': 1.6,\n            '1.020': 2.3,\n            '1.025': 3.0,\n            '1.030': 3.5,\n            '1.035': 4.0,\n            '1.040': 4.9,\n            '1.045': 5.3,\n            '1.050': 6.1,\n            '1.055': 6.9,\n            '1.060': 7.5,\n            '1.065': 8.1,\n            '1.070': 8.9,\n            '1.075': 9.4,\n            '1.080': 10.2,\n            '1.085': 10.9,\n            '1.090': 11.5,\n            '1.095': 12.2,\n            '1.100': 13.0,\n            '1.105': 13.7,\n            '1.110': 14.2,\n            '1.115': 15.0,\n            '1.120': 15.7,\n            '1.125': 16.2,\n            '1.130': 17.1,\n            '1.135': 17.8,\n            '1.140': 18.4,\n            '1.145': 19.0,\n            '1.150': 19.9\n        }\n        \n        return [potentialVolume[iG], finalGravity];\n    }\n\n    handleSubmit(event){\n        let initial = this.state.initialValue;\n        let final = this.state.finalValue;\n        let measurements = this.calculator(initial,final);\n        this.setState({\n            initialValue: this.state.initialValue,\n            finalValue: this.state.finalValue,\n            potential: measurements[0],\n            final: measurements[1]\n        })\n        event.preventDefault();\n    }\n    handleChange1(event){\n        this.setState({\n            initialValue: event.target.value,\n            finalValue: this.state.finalValue,\n            initial: this.state.initial,\n            final: this.state.final\n        })\n    }\n    handleChange2(event){\n        this.setState({\n            initialValue: this.state.initialValue,\n            finalValue: event.target.value,\n            initial: this.state.initial,\n            final: this.state.final\n        })\n    }\n    \n    render(){\n        return (\n            <div className=\"inner-main\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-section\">\n                        <label for=\"initial\">Initial Gravity Measurement: </label><br></br>\n                        <input name=\"initial\" type=\"text\" placeholder='in increments of 0.005'value={this.state.initialValue} onChange={this.handleChange1}></input><br></br>\n                    </div>\n                    <div className=\"form-section\">\n                        <label for=\"final\">Final Gravity Measurement: </label><br></br>\n                        <input name=\"final\" type=\"text\" value={this.state.finalValue} onChange={this.handleChange2}></input><br></br>\n                    </div>\n                    <button className=\"calculate-button\" type=\"submit\" value=\"Submit\" onClick={this.clickHandler}>Calculate!</button>\n                </form>\n                <h3 id=\"initial-volume\">Potential Gravity (before fermentation): </h3>\n                <p>{this.state.potential}</p>\n                <h3 id=\"final-gravity\">Final Gravity (after fermentation): </h3>\n                <p>{this.state.final}</p>\n            </div>\n        );\n    };\n}\n\n\nexport default Calculate;"]},"metadata":{},"sourceType":"module"}