{"ast":null,"code":"var _jsxFileName = \"/Users/codyraymond/Desktop/code_files/web_dev_projects/new_app/mycro-brewery/frontend/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport NavBar from './navBar.js';\nimport CreateRecipe from './createRecipe.js';\nimport ViewRecipes from './viewRecipes.js';\nimport Recipe from './recipe.js';\nimport Calculate from './calculate.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport { json } from 'body-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [],\n      recipeId: undefined\n    };\n    this.addRecipe = this.addRecipe.bind(this);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n    this.selectRecipe = this.selectRecipe.bind(this);\n    this.editRecipe = this.editRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/').then(res => res.json()).then(data => {\n      this.setState({\n        recipes: data,\n        recipeId: this.state.recipeId\n      });\n      console.log(this.state.recipes);\n    });\n  }\n\n  selectRecipe(data) {\n    this.setState({\n      recipes: this.state.recipes,\n      recipeId: data\n    });\n  }\n\n  addRecipe(data) {\n    let ingredients = data.ingredients.split(',');\n    console.log(data, ingredients);\n    fetch('http://localhost:8080/addRecipe/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        recipe: data,\n        ingreds: ingredients\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      return fetch('http://localhost:8080');\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        recipes: data,\n        recipeId: this.state.recipeId\n      });\n    }).then(() => {\n      console.log(this.state.recipes);\n      alert('Recipe Created!');\n    }).catch(err => console.log(err));\n  }\n\n  deleteRecipe(data) {\n    fetch(`http://localhost:8080/deleteRecipe/${data}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      return fetch('http://localhost:8080');\n    }).then(res => res.json()).then(newData => {\n      console.log('new recipe data', newData);\n      this.setState({\n        recipes: newData,\n        recipeId: this.state.recipeId\n      });\n    }).catch(err => console.log(err));\n  }\n\n  editRecipe(data) {\n    let newRecipe = data.newRecipe;\n    let oldRecipe = data.oldRecipe;\n    let body = JSON.stringify({\n      old: oldRecipe,\n      new: newRecipe\n    });\n    fetch('http://localhost:8080/editRecipe', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: body\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      return fetch('http://localhost:8080/');\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        recipes: data,\n        recipeId: this.state.recipeId\n      });\n    });\n  }\n\n  // let arr = this.state.recipes;\n  // arr.splice(this.state.recipeId, 1, data.newRecipe);\n  // this.setState({\n  //   recipes: arr,\n  //   recipeId: this.state.recipeId\n  // })\n  // console.log(this.state.recipes)\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headline\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"app-title\",\n            src: \"public/images/Screen Shot 2021-07-27 at 12.30.00 PM.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n            children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/CreateRecipe\",\n            render: props => /*#__PURE__*/_jsxDEV(CreateRecipe, {\n              action: this.addRecipe,\n              state: this.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/ViewRecipes\",\n            render: props => /*#__PURE__*/_jsxDEV(ViewRecipes, {\n              recipes: this.state.recipes,\n              select: this.selectRecipe,\n              action: this.deleteRecipe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/recipe/\" + this.state.recipeId,\n            render: props => /*#__PURE__*/_jsxDEV(Recipe, {\n              state: this.state,\n              action: this.deleteRecipe,\n              edit: this.editRecipe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 84\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Calculate\",\n            component: Calculate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hometab\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to MyCro Brewery!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"To get started, click a tab above\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Home;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/codyraymond/Desktop/code_files/web_dev_projects/new_app/mycro-brewery/frontend/src/App.js"],"names":["React","ReactDOM","NavBar","CreateRecipe","ViewRecipes","Recipe","Calculate","BrowserRouter","Router","Route","Link","Redirect","json","App","Component","constructor","state","recipes","recipeId","undefined","addRecipe","bind","deleteRecipe","selectRecipe","editRecipe","componentDidMount","fetch","then","res","data","setState","console","log","ingredients","split","method","headers","body","JSON","stringify","recipe","ingreds","alert","catch","err","newData","newRecipe","oldRecipe","old","new","mode","render","Home","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from './navBar.js';\nimport CreateRecipe from './createRecipe.js';\nimport ViewRecipes from './viewRecipes.js';\nimport Recipe from './recipe.js';\nimport Calculate from './calculate.js';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport { json } from 'body-parser';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      recipes: [],\n      recipeId: undefined\n    }\n    this.addRecipe = this.addRecipe.bind(this);\n    this.deleteRecipe = this.deleteRecipe.bind(this);\n    this.selectRecipe = this.selectRecipe.bind(this);\n    this.editRecipe = this.editRecipe.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:8080/')\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({\n        recipes: data,\n        recipeId: this.state.recipeId\n      })\n      console.log(this.state.recipes)\n    })\n  }\n\n  selectRecipe(data){\n    this.setState({\n      recipes: this.state.recipes,\n      recipeId: data\n    })\n  }\n  addRecipe(data){\n    let ingredients = data.ingredients.split(',');\n    console.log(data,ingredients)\n    fetch('http://localhost:8080/addRecipe/',{\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        recipe: data,\n        ingreds: ingredients\n      }),\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      console.log(data)\n      return fetch('http://localhost:8080')\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({\n        recipes: data,\n        recipeId: this.state.recipeId\n      })\n    })\n    .then(()=>{\n      console.log(this.state.recipes)\n      alert('Recipe Created!')\n    })\n    .catch(err=>console.log(err))\n  }\n\n  deleteRecipe(data){\n    fetch(`http://localhost:8080/deleteRecipe/${data}`,{\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      console.log(data)\n      return fetch('http://localhost:8080')\n    })\n    .then(res=>res.json())\n    .then(newData=>{\n      console.log('new recipe data', newData)\n      this.setState({\n        recipes: newData,\n        recipeId: this.state.recipeId\n      })\n    })\n    .catch(err=>console.log(err))\n  }\n\n  editRecipe(data){\n    let newRecipe = data.newRecipe;\n    let oldRecipe = data.oldRecipe;\n    let body = JSON.stringify({old: oldRecipe, new: newRecipe})\n    fetch('http://localhost:8080/editRecipe', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: body,\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      console.log(data)\n      return fetch('http://localhost:8080/')\n    })\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({\n        recipes: data,\n        recipeId: this.state.recipeId\n      })\n    })\n  };\n    // let arr = this.state.recipes;\n    // arr.splice(this.state.recipeId, 1, data.newRecipe);\n    // this.setState({\n    //   recipes: arr,\n    //   recipeId: this.state.recipeId\n    // })\n    // console.log(this.state.recipes)\n  \n\n  render(){\n    return (\n      <Router>\n        <div className=\"app-body\">\n          <div className=\"headline\">\n            <img className=\"app-title\" src=\"public/images/Screen Shot 2021-07-27 at 12.30.00 PM.png\" alt=\"logo\"></img>\n            <nav>\n              <NavBar />\n            </nav>\n          </div>\n            <div className=\"main-wrapper\">\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/CreateRecipe\" render={props=> <CreateRecipe action={this.addRecipe} state={this.state}/>}/>\n                <Route exact path=\"/ViewRecipes\" render={props=> <ViewRecipes recipes={this.state.recipes} select={this.selectRecipe} action={this.deleteRecipe}/>}/>\n                <Route exact path={\"/recipe/\"+this.state.recipeId} render={props=> <Recipe state={this.state} action={this.deleteRecipe} edit={this.editRecipe}/>} />\n                <Route exact path=\"/Calculate\" component={Calculate}/>\n            </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction Home () {\n  return (\n  <div className=\"hometab\">\n    <h2>Welcome to MyCro Brewery!</h2>\n    <p>To get started, click a tab above</p>\n  </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}